<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdddata.dockermgr.dao.mapper.ProjectDeployInfoMapper">
  <resultMap id="BaseResultMap" type="com.jdddata.dockermgr.dao.entity.ProjectDeployInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="host_ip" jdbcType="VARCHAR" property="hostIp" />
    <result column="docker_env" jdbcType="VARCHAR" property="dockerEnv" />
    <result column="deploy_mode" jdbcType="INTEGER" property="deployMode" />
    <result column="git_version" jdbcType="VARCHAR" property="gitVersion" />
    <result column="nexus_target_url" jdbcType="VARCHAR" property="nexusTargetUrl" />
    <result column="docker_container_name" jdbcType="VARCHAR" property="dockerContainerName" />
    <result column="docker_image_name" jdbcType="VARCHAR" property="dockerImageName" />
    <result column="docker_entrypoint" jdbcType="VARCHAR" property="dockerEntrypoint" />
    <result column="docker_mount" jdbcType="VARCHAR" property="dockerMount" />
    <result column="docker_link" jdbcType="VARCHAR" property="dockerLink" />
    <result column="docker_cpuset_cpus" jdbcType="VARCHAR" property="dockerCpusetCpus" />
    <result column="docker_memory" jdbcType="VARCHAR" property="dockerMemory" />
    <result column="docker_memory_swap" jdbcType="VARCHAR" property="dockerMemorySwap" />
    <result column="docker_memory_reservation" jdbcType="VARCHAR" property="dockerMemoryReservation" />
    <result column="docker_memory_swappiness" jdbcType="VARCHAR" property="dockerMemorySwappiness" />
    <result column="is_valid" jdbcType="INTEGER" property="isValid" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, host_ip, docker_env, deploy_mode, git_version, nexus_target_url, 
    docker_container_name, docker_image_name, docker_entrypoint, docker_mount, docker_link, 
    docker_cpuset_cpus, docker_memory, docker_memory_swap, docker_memory_reservation, 
    docker_memory_swappiness, is_valid, is_delete, create_time, create_user, update_time, 
    update_user
  </sql>
  <select id="selectByExample" parameterType="com.jdddata.dockermgr.dao.entity.ProjectDeployInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project_deploy_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project_deploy_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from project_deploy_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jdddata.dockermgr.dao.entity.ProjectDeployInfoExample">
    delete from project_deploy_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jdddata.dockermgr.dao.entity.ProjectDeployInfo">
    insert into project_deploy_info (id, project_id, host_ip, 
      docker_env, deploy_mode, git_version, 
      nexus_target_url, docker_container_name, docker_image_name, 
      docker_entrypoint, docker_mount, docker_link, 
      docker_cpuset_cpus, docker_memory, docker_memory_swap, 
      docker_memory_reservation, docker_memory_swappiness, 
      is_valid, is_delete, create_time, 
      create_user, update_time, update_user
      )
    values (#{id,jdbcType=BIGINT}, #{projectId,jdbcType=VARCHAR}, #{hostIp,jdbcType=VARCHAR}, 
      #{dockerEnv,jdbcType=VARCHAR}, #{deployMode,jdbcType=INTEGER}, #{gitVersion,jdbcType=VARCHAR}, 
      #{nexusTargetUrl,jdbcType=VARCHAR}, #{dockerContainerName,jdbcType=VARCHAR}, #{dockerImageName,jdbcType=VARCHAR}, 
      #{dockerEntrypoint,jdbcType=VARCHAR}, #{dockerMount,jdbcType=VARCHAR}, #{dockerLink,jdbcType=VARCHAR}, 
      #{dockerCpusetCpus,jdbcType=VARCHAR}, #{dockerMemory,jdbcType=VARCHAR}, #{dockerMemorySwap,jdbcType=VARCHAR}, 
      #{dockerMemoryReservation,jdbcType=VARCHAR}, #{dockerMemorySwappiness,jdbcType=VARCHAR}, 
      #{isValid,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jdddata.dockermgr.dao.entity.ProjectDeployInfo">
    insert into project_deploy_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="hostIp != null">
        host_ip,
      </if>
      <if test="dockerEnv != null">
        docker_env,
      </if>
      <if test="deployMode != null">
        deploy_mode,
      </if>
      <if test="gitVersion != null">
        git_version,
      </if>
      <if test="nexusTargetUrl != null">
        nexus_target_url,
      </if>
      <if test="dockerContainerName != null">
        docker_container_name,
      </if>
      <if test="dockerImageName != null">
        docker_image_name,
      </if>
      <if test="dockerEntrypoint != null">
        docker_entrypoint,
      </if>
      <if test="dockerMount != null">
        docker_mount,
      </if>
      <if test="dockerLink != null">
        docker_link,
      </if>
      <if test="dockerCpusetCpus != null">
        docker_cpuset_cpus,
      </if>
      <if test="dockerMemory != null">
        docker_memory,
      </if>
      <if test="dockerMemorySwap != null">
        docker_memory_swap,
      </if>
      <if test="dockerMemoryReservation != null">
        docker_memory_reservation,
      </if>
      <if test="dockerMemorySwappiness != null">
        docker_memory_swappiness,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="hostIp != null">
        #{hostIp,jdbcType=VARCHAR},
      </if>
      <if test="dockerEnv != null">
        #{dockerEnv,jdbcType=VARCHAR},
      </if>
      <if test="deployMode != null">
        #{deployMode,jdbcType=INTEGER},
      </if>
      <if test="gitVersion != null">
        #{gitVersion,jdbcType=VARCHAR},
      </if>
      <if test="nexusTargetUrl != null">
        #{nexusTargetUrl,jdbcType=VARCHAR},
      </if>
      <if test="dockerContainerName != null">
        #{dockerContainerName,jdbcType=VARCHAR},
      </if>
      <if test="dockerImageName != null">
        #{dockerImageName,jdbcType=VARCHAR},
      </if>
      <if test="dockerEntrypoint != null">
        #{dockerEntrypoint,jdbcType=VARCHAR},
      </if>
      <if test="dockerMount != null">
        #{dockerMount,jdbcType=VARCHAR},
      </if>
      <if test="dockerLink != null">
        #{dockerLink,jdbcType=VARCHAR},
      </if>
      <if test="dockerCpusetCpus != null">
        #{dockerCpusetCpus,jdbcType=VARCHAR},
      </if>
      <if test="dockerMemory != null">
        #{dockerMemory,jdbcType=VARCHAR},
      </if>
      <if test="dockerMemorySwap != null">
        #{dockerMemorySwap,jdbcType=VARCHAR},
      </if>
      <if test="dockerMemoryReservation != null">
        #{dockerMemoryReservation,jdbcType=VARCHAR},
      </if>
      <if test="dockerMemorySwappiness != null">
        #{dockerMemorySwappiness,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jdddata.dockermgr.dao.entity.ProjectDeployInfoExample" resultType="java.lang.Integer">
    select count(*) from project_deploy_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project_deploy_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.hostIp != null">
        host_ip = #{record.hostIp,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerEnv != null">
        docker_env = #{record.dockerEnv,jdbcType=VARCHAR},
      </if>
      <if test="record.deployMode != null">
        deploy_mode = #{record.deployMode,jdbcType=INTEGER},
      </if>
      <if test="record.gitVersion != null">
        git_version = #{record.gitVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.nexusTargetUrl != null">
        nexus_target_url = #{record.nexusTargetUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerContainerName != null">
        docker_container_name = #{record.dockerContainerName,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerImageName != null">
        docker_image_name = #{record.dockerImageName,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerEntrypoint != null">
        docker_entrypoint = #{record.dockerEntrypoint,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerMount != null">
        docker_mount = #{record.dockerMount,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerLink != null">
        docker_link = #{record.dockerLink,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerCpusetCpus != null">
        docker_cpuset_cpus = #{record.dockerCpusetCpus,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerMemory != null">
        docker_memory = #{record.dockerMemory,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerMemorySwap != null">
        docker_memory_swap = #{record.dockerMemorySwap,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerMemoryReservation != null">
        docker_memory_reservation = #{record.dockerMemoryReservation,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerMemorySwappiness != null">
        docker_memory_swappiness = #{record.dockerMemorySwappiness,jdbcType=VARCHAR},
      </if>
      <if test="record.isValid != null">
        is_valid = #{record.isValid,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project_deploy_info
    set id = #{record.id,jdbcType=BIGINT},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      host_ip = #{record.hostIp,jdbcType=VARCHAR},
      docker_env = #{record.dockerEnv,jdbcType=VARCHAR},
      deploy_mode = #{record.deployMode,jdbcType=INTEGER},
      git_version = #{record.gitVersion,jdbcType=VARCHAR},
      nexus_target_url = #{record.nexusTargetUrl,jdbcType=VARCHAR},
      docker_container_name = #{record.dockerContainerName,jdbcType=VARCHAR},
      docker_image_name = #{record.dockerImageName,jdbcType=VARCHAR},
      docker_entrypoint = #{record.dockerEntrypoint,jdbcType=VARCHAR},
      docker_mount = #{record.dockerMount,jdbcType=VARCHAR},
      docker_link = #{record.dockerLink,jdbcType=VARCHAR},
      docker_cpuset_cpus = #{record.dockerCpusetCpus,jdbcType=VARCHAR},
      docker_memory = #{record.dockerMemory,jdbcType=VARCHAR},
      docker_memory_swap = #{record.dockerMemorySwap,jdbcType=VARCHAR},
      docker_memory_reservation = #{record.dockerMemoryReservation,jdbcType=VARCHAR},
      docker_memory_swappiness = #{record.dockerMemorySwappiness,jdbcType=VARCHAR},
      is_valid = #{record.isValid,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jdddata.dockermgr.dao.entity.ProjectDeployInfo">
    update project_deploy_info
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="hostIp != null">
        host_ip = #{hostIp,jdbcType=VARCHAR},
      </if>
      <if test="dockerEnv != null">
        docker_env = #{dockerEnv,jdbcType=VARCHAR},
      </if>
      <if test="deployMode != null">
        deploy_mode = #{deployMode,jdbcType=INTEGER},
      </if>
      <if test="gitVersion != null">
        git_version = #{gitVersion,jdbcType=VARCHAR},
      </if>
      <if test="nexusTargetUrl != null">
        nexus_target_url = #{nexusTargetUrl,jdbcType=VARCHAR},
      </if>
      <if test="dockerContainerName != null">
        docker_container_name = #{dockerContainerName,jdbcType=VARCHAR},
      </if>
      <if test="dockerImageName != null">
        docker_image_name = #{dockerImageName,jdbcType=VARCHAR},
      </if>
      <if test="dockerEntrypoint != null">
        docker_entrypoint = #{dockerEntrypoint,jdbcType=VARCHAR},
      </if>
      <if test="dockerMount != null">
        docker_mount = #{dockerMount,jdbcType=VARCHAR},
      </if>
      <if test="dockerLink != null">
        docker_link = #{dockerLink,jdbcType=VARCHAR},
      </if>
      <if test="dockerCpusetCpus != null">
        docker_cpuset_cpus = #{dockerCpusetCpus,jdbcType=VARCHAR},
      </if>
      <if test="dockerMemory != null">
        docker_memory = #{dockerMemory,jdbcType=VARCHAR},
      </if>
      <if test="dockerMemorySwap != null">
        docker_memory_swap = #{dockerMemorySwap,jdbcType=VARCHAR},
      </if>
      <if test="dockerMemoryReservation != null">
        docker_memory_reservation = #{dockerMemoryReservation,jdbcType=VARCHAR},
      </if>
      <if test="dockerMemorySwappiness != null">
        docker_memory_swappiness = #{dockerMemorySwappiness,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jdddata.dockermgr.dao.entity.ProjectDeployInfo">
    update project_deploy_info
    set project_id = #{projectId,jdbcType=VARCHAR},
      host_ip = #{hostIp,jdbcType=VARCHAR},
      docker_env = #{dockerEnv,jdbcType=VARCHAR},
      deploy_mode = #{deployMode,jdbcType=INTEGER},
      git_version = #{gitVersion,jdbcType=VARCHAR},
      nexus_target_url = #{nexusTargetUrl,jdbcType=VARCHAR},
      docker_container_name = #{dockerContainerName,jdbcType=VARCHAR},
      docker_image_name = #{dockerImageName,jdbcType=VARCHAR},
      docker_entrypoint = #{dockerEntrypoint,jdbcType=VARCHAR},
      docker_mount = #{dockerMount,jdbcType=VARCHAR},
      docker_link = #{dockerLink,jdbcType=VARCHAR},
      docker_cpuset_cpus = #{dockerCpusetCpus,jdbcType=VARCHAR},
      docker_memory = #{dockerMemory,jdbcType=VARCHAR},
      docker_memory_swap = #{dockerMemorySwap,jdbcType=VARCHAR},
      docker_memory_reservation = #{dockerMemoryReservation,jdbcType=VARCHAR},
      docker_memory_swappiness = #{dockerMemorySwappiness,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.jdddata.dockermgr.dao.entity.ProjectDeployInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="host_ip" jdbcType="VARCHAR" property="hostIp" />
    <result column="docker_env" jdbcType="VARCHAR" property="dockerEnv" />
    <result column="deploy_mode" jdbcType="INTEGER" property="deployMode" />
    <result column="git_version" jdbcType="VARCHAR" property="gitVersion" />
    <result column="nexus_target_url" jdbcType="VARCHAR" property="nexusTargetUrl" />
    <result column="docker_container_name" jdbcType="VARCHAR" property="dockerContainerName" />
    <result column="docker_image_name" jdbcType="VARCHAR" property="dockerImageName" />
    <result column="docker_entrypoint" jdbcType="VARCHAR" property="dockerEntrypoint" />
    <result column="docker_mount" jdbcType="VARCHAR" property="dockerMount" />
    <result column="docker_link" jdbcType="VARCHAR" property="dockerLink" />
    <result column="docker_cpuset_cpus" jdbcType="VARCHAR" property="dockerCpusetCpus" />
    <result column="docker_memory" jdbcType="VARCHAR" property="dockerMemory" />
    <result column="docker_memory_swap" jdbcType="VARCHAR" property="dockerMemorySwap" />
    <result column="docker_memory_reservation" jdbcType="VARCHAR" property="dockerMemoryReservation" />
    <result column="docker_memory_swappiness" jdbcType="VARCHAR" property="dockerMemorySwappiness" />
    <result column="is_valid" jdbcType="INTEGER" property="isValid" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, host_ip, docker_env, deploy_mode, git_version, nexus_target_url, 
    docker_container_name, docker_image_name, docker_entrypoint, docker_mount, docker_link, 
    docker_cpuset_cpus, docker_memory, docker_memory_swap, docker_memory_reservation, 
    docker_memory_swappiness, is_valid, is_delete, create_time, create_user, update_time, 
    update_user
  </sql>
  <select id="selectByExample" parameterType="com.jdddata.dockermgr.dao.entity.ProjectDeployInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project_deploy_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project_deploy_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from project_deploy_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jdddata.dockermgr.dao.entity.ProjectDeployInfoExample">
    delete from project_deploy_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jdddata.dockermgr.dao.entity.ProjectDeployInfo">
    insert into project_deploy_info (id, project_id, host_ip, 
      docker_env, deploy_mode, git_version, 
      nexus_target_url, docker_container_name, docker_image_name, 
      docker_entrypoint, docker_mount, docker_link, 
      docker_cpuset_cpus, docker_memory, docker_memory_swap, 
      docker_memory_reservation, docker_memory_swappiness, 
      is_valid, is_delete, create_time, 
      create_user, update_time, update_user
      )
    values (#{id,jdbcType=BIGINT}, #{projectId,jdbcType=VARCHAR}, #{hostIp,jdbcType=VARCHAR}, 
      #{dockerEnv,jdbcType=VARCHAR}, #{deployMode,jdbcType=INTEGER}, #{gitVersion,jdbcType=VARCHAR}, 
      #{nexusTargetUrl,jdbcType=VARCHAR}, #{dockerContainerName,jdbcType=VARCHAR}, #{dockerImageName,jdbcType=VARCHAR}, 
      #{dockerEntrypoint,jdbcType=VARCHAR}, #{dockerMount,jdbcType=VARCHAR}, #{dockerLink,jdbcType=VARCHAR}, 
      #{dockerCpusetCpus,jdbcType=VARCHAR}, #{dockerMemory,jdbcType=VARCHAR}, #{dockerMemorySwap,jdbcType=VARCHAR}, 
      #{dockerMemoryReservation,jdbcType=VARCHAR}, #{dockerMemorySwappiness,jdbcType=VARCHAR}, 
      #{isValid,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jdddata.dockermgr.dao.entity.ProjectDeployInfo">
    insert into project_deploy_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="hostIp != null">
        host_ip,
      </if>
      <if test="dockerEnv != null">
        docker_env,
      </if>
      <if test="deployMode != null">
        deploy_mode,
      </if>
      <if test="gitVersion != null">
        git_version,
      </if>
      <if test="nexusTargetUrl != null">
        nexus_target_url,
      </if>
      <if test="dockerContainerName != null">
        docker_container_name,
      </if>
      <if test="dockerImageName != null">
        docker_image_name,
      </if>
      <if test="dockerEntrypoint != null">
        docker_entrypoint,
      </if>
      <if test="dockerMount != null">
        docker_mount,
      </if>
      <if test="dockerLink != null">
        docker_link,
      </if>
      <if test="dockerCpusetCpus != null">
        docker_cpuset_cpus,
      </if>
      <if test="dockerMemory != null">
        docker_memory,
      </if>
      <if test="dockerMemorySwap != null">
        docker_memory_swap,
      </if>
      <if test="dockerMemoryReservation != null">
        docker_memory_reservation,
      </if>
      <if test="dockerMemorySwappiness != null">
        docker_memory_swappiness,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="hostIp != null">
        #{hostIp,jdbcType=VARCHAR},
      </if>
      <if test="dockerEnv != null">
        #{dockerEnv,jdbcType=VARCHAR},
      </if>
      <if test="deployMode != null">
        #{deployMode,jdbcType=INTEGER},
      </if>
      <if test="gitVersion != null">
        #{gitVersion,jdbcType=VARCHAR},
      </if>
      <if test="nexusTargetUrl != null">
        #{nexusTargetUrl,jdbcType=VARCHAR},
      </if>
      <if test="dockerContainerName != null">
        #{dockerContainerName,jdbcType=VARCHAR},
      </if>
      <if test="dockerImageName != null">
        #{dockerImageName,jdbcType=VARCHAR},
      </if>
      <if test="dockerEntrypoint != null">
        #{dockerEntrypoint,jdbcType=VARCHAR},
      </if>
      <if test="dockerMount != null">
        #{dockerMount,jdbcType=VARCHAR},
      </if>
      <if test="dockerLink != null">
        #{dockerLink,jdbcType=VARCHAR},
      </if>
      <if test="dockerCpusetCpus != null">
        #{dockerCpusetCpus,jdbcType=VARCHAR},
      </if>
      <if test="dockerMemory != null">
        #{dockerMemory,jdbcType=VARCHAR},
      </if>
      <if test="dockerMemorySwap != null">
        #{dockerMemorySwap,jdbcType=VARCHAR},
      </if>
      <if test="dockerMemoryReservation != null">
        #{dockerMemoryReservation,jdbcType=VARCHAR},
      </if>
      <if test="dockerMemorySwappiness != null">
        #{dockerMemorySwappiness,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jdddata.dockermgr.dao.entity.ProjectDeployInfoExample" resultType="java.lang.Integer">
    select count(*) from project_deploy_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project_deploy_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.hostIp != null">
        host_ip = #{record.hostIp,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerEnv != null">
        docker_env = #{record.dockerEnv,jdbcType=VARCHAR},
      </if>
      <if test="record.deployMode != null">
        deploy_mode = #{record.deployMode,jdbcType=INTEGER},
      </if>
      <if test="record.gitVersion != null">
        git_version = #{record.gitVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.nexusTargetUrl != null">
        nexus_target_url = #{record.nexusTargetUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerContainerName != null">
        docker_container_name = #{record.dockerContainerName,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerImageName != null">
        docker_image_name = #{record.dockerImageName,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerEntrypoint != null">
        docker_entrypoint = #{record.dockerEntrypoint,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerMount != null">
        docker_mount = #{record.dockerMount,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerLink != null">
        docker_link = #{record.dockerLink,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerCpusetCpus != null">
        docker_cpuset_cpus = #{record.dockerCpusetCpus,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerMemory != null">
        docker_memory = #{record.dockerMemory,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerMemorySwap != null">
        docker_memory_swap = #{record.dockerMemorySwap,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerMemoryReservation != null">
        docker_memory_reservation = #{record.dockerMemoryReservation,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerMemorySwappiness != null">
        docker_memory_swappiness = #{record.dockerMemorySwappiness,jdbcType=VARCHAR},
      </if>
      <if test="record.isValid != null">
        is_valid = #{record.isValid,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project_deploy_info
    set id = #{record.id,jdbcType=BIGINT},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      host_ip = #{record.hostIp,jdbcType=VARCHAR},
      docker_env = #{record.dockerEnv,jdbcType=VARCHAR},
      deploy_mode = #{record.deployMode,jdbcType=INTEGER},
      git_version = #{record.gitVersion,jdbcType=VARCHAR},
      nexus_target_url = #{record.nexusTargetUrl,jdbcType=VARCHAR},
      docker_container_name = #{record.dockerContainerName,jdbcType=VARCHAR},
      docker_image_name = #{record.dockerImageName,jdbcType=VARCHAR},
      docker_entrypoint = #{record.dockerEntrypoint,jdbcType=VARCHAR},
      docker_mount = #{record.dockerMount,jdbcType=VARCHAR},
      docker_link = #{record.dockerLink,jdbcType=VARCHAR},
      docker_cpuset_cpus = #{record.dockerCpusetCpus,jdbcType=VARCHAR},
      docker_memory = #{record.dockerMemory,jdbcType=VARCHAR},
      docker_memory_swap = #{record.dockerMemorySwap,jdbcType=VARCHAR},
      docker_memory_reservation = #{record.dockerMemoryReservation,jdbcType=VARCHAR},
      docker_memory_swappiness = #{record.dockerMemorySwappiness,jdbcType=VARCHAR},
      is_valid = #{record.isValid,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jdddata.dockermgr.dao.entity.ProjectDeployInfo">
    update project_deploy_info
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="hostIp != null">
        host_ip = #{hostIp,jdbcType=VARCHAR},
      </if>
      <if test="dockerEnv != null">
        docker_env = #{dockerEnv,jdbcType=VARCHAR},
      </if>
      <if test="deployMode != null">
        deploy_mode = #{deployMode,jdbcType=INTEGER},
      </if>
      <if test="gitVersion != null">
        git_version = #{gitVersion,jdbcType=VARCHAR},
      </if>
      <if test="nexusTargetUrl != null">
        nexus_target_url = #{nexusTargetUrl,jdbcType=VARCHAR},
      </if>
      <if test="dockerContainerName != null">
        docker_container_name = #{dockerContainerName,jdbcType=VARCHAR},
      </if>
      <if test="dockerImageName != null">
        docker_image_name = #{dockerImageName,jdbcType=VARCHAR},
      </if>
      <if test="dockerEntrypoint != null">
        docker_entrypoint = #{dockerEntrypoint,jdbcType=VARCHAR},
      </if>
      <if test="dockerMount != null">
        docker_mount = #{dockerMount,jdbcType=VARCHAR},
      </if>
      <if test="dockerLink != null">
        docker_link = #{dockerLink,jdbcType=VARCHAR},
      </if>
      <if test="dockerCpusetCpus != null">
        docker_cpuset_cpus = #{dockerCpusetCpus,jdbcType=VARCHAR},
      </if>
      <if test="dockerMemory != null">
        docker_memory = #{dockerMemory,jdbcType=VARCHAR},
      </if>
      <if test="dockerMemorySwap != null">
        docker_memory_swap = #{dockerMemorySwap,jdbcType=VARCHAR},
      </if>
      <if test="dockerMemoryReservation != null">
        docker_memory_reservation = #{dockerMemoryReservation,jdbcType=VARCHAR},
      </if>
      <if test="dockerMemorySwappiness != null">
        docker_memory_swappiness = #{dockerMemorySwappiness,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jdddata.dockermgr.dao.entity.ProjectDeployInfo">
    update project_deploy_info
    set project_id = #{projectId,jdbcType=VARCHAR},
      host_ip = #{hostIp,jdbcType=VARCHAR},
      docker_env = #{dockerEnv,jdbcType=VARCHAR},
      deploy_mode = #{deployMode,jdbcType=INTEGER},
      git_version = #{gitVersion,jdbcType=VARCHAR},
      nexus_target_url = #{nexusTargetUrl,jdbcType=VARCHAR},
      docker_container_name = #{dockerContainerName,jdbcType=VARCHAR},
      docker_image_name = #{dockerImageName,jdbcType=VARCHAR},
      docker_entrypoint = #{dockerEntrypoint,jdbcType=VARCHAR},
      docker_mount = #{dockerMount,jdbcType=VARCHAR},
      docker_link = #{dockerLink,jdbcType=VARCHAR},
      docker_cpuset_cpus = #{dockerCpusetCpus,jdbcType=VARCHAR},
      docker_memory = #{dockerMemory,jdbcType=VARCHAR},
      docker_memory_swap = #{dockerMemorySwap,jdbcType=VARCHAR},
      docker_memory_reservation = #{dockerMemoryReservation,jdbcType=VARCHAR},
      docker_memory_swappiness = #{dockerMemorySwappiness,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>